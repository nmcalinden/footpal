{
    "swagger": "2.0",
    "info": {
        "description": "This is swagger for Footpal",
        "title": "Footpal API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Footpal Support",
            "email": "nathan.mcalinden@unosquare.com"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:8081",
    "basePath": "/",
    "paths": {
        "/bookings": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all bookings by user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Booking"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new single or recurring booking testing",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.BookingRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{bookingId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve booking by bookingId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edit booking details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.BookingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Booking"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancel active or pending booking",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{bookingId}/matches": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all matches linked to booking",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "booking"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Booking ID",
                        "name": "bookingId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Match"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deactivate": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete user from Footpal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login to Footpal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.TokenPairResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/matches": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all public matches",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.MatchSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/matches/{matchId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve match details by matchId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Match"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancel match",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/matches/{matchId}/players": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all players opted into a match",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MatchPlayer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/matches/{matchId}/players/{playerId}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "As a booking/squad admin, remove player from match",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "match"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get logged-in user details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.PlayerUser"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/players": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all players",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit",
                        "name": "limit",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "After ID",
                        "name": "after_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.Players"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edit player information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.PlayerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.PlayerUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/players/matches": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve a players opted in matches",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Match"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/players/matches/{matchId}": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Request to join match",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.JoinMatchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Leave match",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/players/matches/{matchId}/pay": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "For a match, pay amount owed by player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Payment Type ID",
                        "name": "paymentTypeId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "For a match, pay amount owed by player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Match ID",
                        "name": "matchId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.PlayerPaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/players/squads": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all squads linked to player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Squad"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/players/squads/{squadId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve squad by squad id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Player"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Request to join squad",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/players/{playerId}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get Player information",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "player"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.Player"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Refresh token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.Refresh"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.TokenPairResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Register as new player",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.Register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/payloads.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/squads": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all squads",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Squad"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new squad for building up a team of players",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.SquadRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.SquadResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/squads/{squadId}": {
            "get": {
                "description": "Get squad by squadId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Squad"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update Squad Info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.SquadRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Squad"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete squad from footpal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "accepted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/squads/{squadId}/players": {
            "get": {
                "description": "List of players associated with squad",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.SquadPlayerDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/squads/{squadId}/players/{playerId}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Approve player to join squad",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove player from squad",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "squad"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Squad ID",
                        "name": "squadId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Player ID",
                        "name": "playerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues": {
            "get": {
                "description": "Retrieve all venues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.Venue"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edit venue details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.VenueRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Venue"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new football venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.VenueRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues/summary": {
            "get": {
                "description": "Retrieve all venues",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/views.VenueSummary"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}": {
            "get": {
                "description": "Retrieve venue by venueId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.Venue"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove venue from Footpal",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}/admins": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve venue administrators",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payloads.VenueAdminResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add new administrator to venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.VenueAdminRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/payloads.VenueAdminResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove administrator from venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}/pitches": {
            "get": {
                "description": "Get Pitches by Venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pitch"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add new pitch to existing venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.PitchRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pitch"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}/pitches/{pitchId}": {
            "get": {
                "description": "Get pitch info by venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pitch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Edit pitch details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "description": "Request",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payloads.PitchRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pitch ID",
                        "name": "pitchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Pitch"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Remove pitch from venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pitch ID",
                        "name": "pitchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}/pitches/{pitchId}/timeslots": {
            "get": {
                "description": "Retrieve all time slots by Pitch",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Pitch ID",
                        "name": "pitchId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}/timeslots": {
            "get": {
                "description": "Retrieve all time slots by Venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "param": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "controllers.SquadResponse": {
            "type": "object"
        },
        "models.Booking": {
            "type": "object",
            "required": [
                "bookingStatusId",
                "created",
                "createdBy",
                "lastUpdated"
            ],
            "properties": {
                "bookingId": {
                    "type": "integer"
                },
                "bookingStatusId": {
                    "type": "integer"
                },
                "created": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "integer"
                },
                "lastUpdated": {
                    "type": "string"
                }
            }
        },
        "models.Match": {
            "type": "object",
            "required": [
                "bookingId",
                "cost",
                "created",
                "isPaid",
                "lastUpdated",
                "matchAccessStatusId",
                "matchDate",
                "matchStatusId",
                "squadId"
            ],
            "properties": {
                "bookingId": {
                    "type": "integer"
                },
                "cost": {
                    "type": "number"
                },
                "created": {
                    "type": "string"
                },
                "isPaid": {
                    "type": "boolean"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "matchAccessStatusId": {
                    "type": "integer"
                },
                "matchDate": {
                    "type": "string"
                },
                "matchId": {
                    "type": "integer"
                },
                "matchStatusId": {
                    "type": "integer"
                },
                "squadId": {
                    "type": "integer"
                }
            }
        },
        "models.MatchPlayer": {
            "type": "object",
            "required": [
                "amountToPay",
                "matchId",
                "paymentTypeId",
                "playerId"
            ],
            "properties": {
                "amountToPay": {
                    "type": "number"
                },
                "matchId": {
                    "type": "integer"
                },
                "matchPlayerId": {
                    "type": "integer"
                },
                "paymentTypeId": {
                    "type": "integer"
                },
                "playerId": {
                    "type": "integer"
                }
            }
        },
        "models.Pitch": {
            "type": "object",
            "required": [
                "cost",
                "maxPlayers",
                "name",
                "venueId"
            ],
            "properties": {
                "cost": {
                    "type": "number"
                },
                "maxPlayers": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "pitchId": {
                    "type": "integer"
                },
                "venueId": {
                    "type": "integer"
                }
            }
        },
        "models.Player": {
            "type": "object",
            "required": [
                "address",
                "city",
                "nickname",
                "postcode"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 11
                },
                "city": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "nickname": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 2
                },
                "playerId": {
                    "type": "integer"
                },
                "postcode": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 5
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "models.Squad": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "squadId": {
                    "type": "integer"
                }
            }
        },
        "models.SquadPlayerDetails": {
            "type": "object",
            "properties": {
                "forename": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "playerId": {
                    "type": "integer"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "models.Venue": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phoneNo": {
                    "type": "string"
                },
                "postcode": {
                    "type": "string"
                }
            }
        },
        "payloads.BookingRequest": {
            "type": "object",
            "required": [
                "day",
                "endTime",
                "matchAccessStatusId",
                "noOfWeeks",
                "pitchId",
                "startTime",
                "venueId"
            ],
            "properties": {
                "day": {
                    "type": "string",
                    "maxLength": 10,
                    "minLength": 3
                },
                "endTime": {
                    "type": "string"
                },
                "matchAccessStatusId": {
                    "type": "integer"
                },
                "noOfWeeks": {
                    "type": "integer"
                },
                "pitchId": {
                    "type": "integer"
                },
                "squadId": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "venueId": {
                    "type": "integer"
                }
            }
        },
        "payloads.JoinMatchResponse": {
            "type": "object",
            "properties": {
                "matchId": {
                    "type": "integer"
                }
            }
        },
        "payloads.Login": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 5
                },
                "password": {
                    "type": "string",
                    "maxLength": 25,
                    "minLength": 5
                }
            }
        },
        "payloads.PitchRequest": {
            "type": "object",
            "required": [
                "cost",
                "maxPlayers",
                "name"
            ],
            "properties": {
                "cost": {
                    "type": "number"
                },
                "maxPlayers": {
                    "type": "integer",
                    "maximum": 22
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "payloads.PlayerPaymentRequest": {
            "type": "object",
            "required": [
                "amountToPay"
            ],
            "properties": {
                "amountToPay": {
                    "type": "number"
                }
            }
        },
        "payloads.PlayerRequest": {
            "type": "object",
            "required": [
                "city",
                "nickname",
                "phoneNo",
                "postcode"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "nickname": {
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 2
                },
                "phoneNo": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 11
                },
                "postcode": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 5
                }
            }
        },
        "payloads.Refresh": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "payloads.Register": {
            "type": "object",
            "required": [
                "email",
                "forename",
                "password",
                "surname"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 5
                },
                "forename": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "isPlayer": {
                    "description": "default: true",
                    "type": "boolean"
                },
                "password": {
                    "type": "string",
                    "maxLength": 25,
                    "minLength": 5
                },
                "surname": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "payloads.RegisterResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "payloads.SquadRequest": {
            "type": "object",
            "required": [
                "city",
                "name"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "name": {
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 2
                }
            }
        },
        "payloads.TokenPairResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "payloads.VenueAdminRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "integer"
                },
                "venueId": {
                    "type": "integer"
                }
            }
        },
        "payloads.VenueAdminResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "forename": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "venueAdminId": {
                    "type": "integer"
                }
            }
        },
        "payloads.VenueRequest": {
            "type": "object",
            "required": [
                "address",
                "city",
                "email",
                "name",
                "phoneNo",
                "postcode"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "city": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                },
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                },
                "phoneNo": {
                    "type": "string",
                    "maxLength": 15,
                    "minLength": 11
                },
                "postcode": {
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 5
                }
            }
        },
        "views.MatchSummary": {
            "type": "object",
            "properties": {
                "cost": {
                    "type": "number"
                },
                "id": {
                    "type": "integer"
                },
                "matchDate": {
                    "type": "string"
                },
                "maxPlayers": {
                    "type": "integer"
                },
                "pitchId": {
                    "type": "integer"
                },
                "pitchName": {
                    "type": "string"
                },
                "squadId": {
                    "type": "integer"
                },
                "squadName": {
                    "type": "string"
                },
                "venueId": {
                    "type": "integer"
                },
                "venueName": {
                    "type": "string"
                }
            }
        },
        "views.Pagination": {
            "type": "object",
            "properties": {
                "_links": {
                    "$ref": "#/definitions/views.PaginationLinks"
                },
                "lastId": {
                    "type": "integer"
                },
                "limit": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "views.PaginationLinks": {
            "type": "object",
            "properties": {
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                }
            }
        },
        "views.Player": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "playerId": {
                    "type": "integer"
                }
            }
        },
        "views.PlayerUser": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "phoneNo": {
                    "type": "string"
                },
                "postcode": {
                    "type": "string"
                }
            }
        },
        "views.Players": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.Player"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/views.Pagination"
                }
            }
        },
        "views.Venue": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phoneNo": {
                    "type": "string"
                },
                "pitches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.VenuePitchSummary"
                    }
                },
                "postcode": {
                    "type": "string"
                }
            }
        },
        "views.VenuePitchSummary": {
            "type": "object",
            "properties": {
                "href": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "views.VenueSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}